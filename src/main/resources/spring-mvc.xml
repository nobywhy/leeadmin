<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd   
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
	default-lazy-init="true">
	<!-- 开启controller注解支持 -->
	<context:component-scan base-package="com.lee"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 会自动注册了validator ConversionService -->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 启动对@AspectJ注解的支持 -->
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->  
	<context:component-scan base-package="com.lee.annotation" />
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 静态资源处理 -->
	<mvc:default-servlet-handler />
	<mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

	<!-- Freemarker配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/pages" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			 <map>  
		        <entry key="hasPermission" value-ref="hasPermissionTag"/>      
		     </map>     
		</property>
	</bean>
	
	<!-- 自定义freemarker标签 -->
	<bean id="hasPermissionTag" class="com.lee.freemarker.HasPermissionTag"></bean>
	

	<!-- FreeMarker视图解析 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>


	<!-- 统一异常处理 -->
	<bean id="exceptionHandler" class="com.lee.common.exception.ExceptionHandler" />
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
		<property name="defaultErrorView" value="error"></property>
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<property name="exceptionAttribute" value="ex"></property>
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
		<property name="exceptionMappings">
			<props>
				<!-- 没有权限异常拦截 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">none_authority</prop>
			</props>
		</property>
	</bean>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
            <mvc:mapping path="/**/*.do" />
			<mvc:exclude-mapping path="/admin/login.do" />
			<mvc:exclude-mapping path="/admin/signin.do" />
			<mvc:exclude-mapping path="/admin/error.do" />
			<mvc:exclude-mapping path="/admin/logout.do" />
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.lee.interceptor.PermissionsInterceptor" />

		</mvc:interceptor>
	</mvc:interceptors>

</beans>
